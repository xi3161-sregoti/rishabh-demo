apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sallowedpullpolicy
  annotations:
    description: Should have allowed pull policy
    category: Security

spec:
  crd:
    spec:
      names:
        kind: K8sAllowedPullPolicy
      validation:
        openAPIV3Schema:
          type: object
          properties:
            allowedPullPolicies:
              type: array
              items:
                type: string
            
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sallowedpullpolicy
        import future.keywords.in

        # Check if imagePullPolicy is in allowed lista
        violation[{"msg": msg}] {
          container := filtered_containers[_]
          not input.parameters.allowedPullPolicies[container.imagePullPolicy]
          msg := sprintf("Container %v in your %v %v is not using a allowed image pull policy : %v", [container.name, input.review.object.kind, input.review.object.metadata.name, container.imagePullPolicy])
        }

        # filtered_containers returns containers and initContainers
        filtered_containers[c] {
          input.review.object.kind == "Pod"
          c := input.review.object.spec.containers[_] 
        }

        filtered_containers[c] {
          input.review.object.kind == "Pod"
          c := input.review.object.spec.initContainers[_] 
        }

        filtered_containers[c] {
          input.review.object.kind in ["Deployment", "StatefulSet", "Job"]
          c := input.review.object.spec.template.spec.containers[_]
        }

        filtered_containers[c] {
          input.review.object.kind in ["Deployment", "StatefulSet", "Job"]
          c := input.review.object.spec.template.spec.initContainers[_]
        }

        filtered_containers[c] {
          input.review.object.kind == "CronJob"
          c := input.review.object.spec.jobTemplate.spec.template.spec.containers[_]
        }

        filtered_containers[c] {
          input.review.object.kind == "CronJob"
          c := input.review.object.spec.jobTemplate.spec.template.spec.initContainers[_]
        }

        