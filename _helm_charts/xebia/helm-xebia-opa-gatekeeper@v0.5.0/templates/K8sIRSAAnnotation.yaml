apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sirsaannotation
  annotations:
    description: IRSA Annotation Present
    category: Runtime
spec:
  crd:
    spec:
      names:
        kind: K8sIRSAAnnotation
      validation:
        openAPIV3Schema:
          type: object
          properties:
            annotation:
              type: array
              items:
                type: object
                properties:
                  key: 
                    type: string
                  value: 
                    type: string

  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sirsaannotation
        import future.keywords.in
       
        violation[{"msg": msg}] {
          input.review.object.kind == "ServiceAccount"
          input.review.object.metadata.annotations
          satisfied := [good | annotation = input.parameters.annotation[_] ; good = validate(annotation)]
          any(satisfied)
          msg := sprintf("%v %v does have all the valid annotations", [input.review.object.kind, input.review.object.metadata.name])
        }

        validate(annotation){
          not input.review.object.metadata.annotations[annotation.key]
        }

        validate(annotation){
          input.review.object.metadata.annotations[annotation.key] != annotation.value
        }